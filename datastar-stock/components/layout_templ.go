// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func layout() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" class=\"w-full h-full\"><head><title>RG Stock</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"icon\" href=\"/assets/imgs/favicon.ico\" type=\"image/x-icon\"><link rel=\"stylesheet\" href=\"/assets/css/styles.css\"><link rel=\"stylesheet\" href=\"/assets/css/open-props.min.css\"><script src=\"/assets/js/data-star.min.js\" type=\"module\"></script><script src=\"/assets/js/echarts.min.js\"></script></head><body class=\"w-full h-full bg-slate-100\"><main class=\"w-full h-full overflow-y-auto scrollbar-thin scrollbar-track-violet-200 scrollbar-thumb-[#8A2BE2]\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</main><script type=\"text/javascript\">\n\t\t\t\tfunction ResizeChart(id){\n\t\t\t\t\tlet chartDom = document.getElementById(id);\t\n\t\t\t\t\tlet myChart=echarts.getInstanceByDom(chartDom);\t\t\t\t\n\t\t\t\t\tif(myChart) {\n\t\t\t\t\t\tmyChart.resize();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction LoadChart(id,xAxisData,yAxisData){\t\t\n\t\t\t\t\tlet chartDom = document.getElementById(id);\t\n\t\t\t\t\tlet myChart=echarts.getInstanceByDom(chartDom);\t\t\t\t\n\t\t\t\t\tif(!myChart) {\n\t\t\t\t\t\tmyChart = echarts.init(chartDom);\n\t\t\t\t\t}\n\t\t\t\t\tlet option = {\n\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\ttype: 'category',\n\t\t\t\t\t\t\tboundaryGap: false,\n\t\t\t\t\t\t\tdata: xAxisData\n\t\t\t\t\t\t},\n\t\t\t\t\t\tyAxis: {\n\t\t\t\t\t\t\ttype: 'value'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata: yAxisData,\n\t\t\t\t\t\t\t\ttype: 'line',\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t\t\tcolor: \"#8A2BE2\",\n\t\t\t\t\t\t\t\tareaStyle: {\n\t\t\t\t\t\t\t\t\tcolor: \"rgba(138, 43, 226,0.3)\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\ttrigger: \"axis\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttoolbox: {\n\t\t\t\t\t\t\tfeature: {\n\t\t\t\t\t\t\t\trestore: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\t\t\t\t\t\t\n\t\t\t\t\t\tdataZoom: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"inside\",\n\t\t\t\t\t\t\t\tstart: xAxisData.length - 100,\n\t\t\t\t\t\t\t\tend: xAxisData.length,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstart: xAxisData.length - 100,\n\t\t\t\t\t\t\t\tend: xAxisData.length,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t};\n\t\t\t\t\toption && myChart.setOption(option);\n\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
