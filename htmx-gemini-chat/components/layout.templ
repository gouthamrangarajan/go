package components

templ layout() {
	<!DOCTYPE html>
	<html>
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Gemini Chat</title>
			<meta name="description" content="Simple AI Chat App to talk to Gemini AI"/>
			<link rel="icon" href="/assets/images/favicon.ico"/>
			<link href="/assets/css/styles.css" rel="stylesheet"/>
			<link href="/assets/css/openprops.min.css" rel="stylesheet"/>
			<script src="/assets/js/htmx.min.js" type="text/javascript"></script>
			<script src="/assets/js/Alpine_focus.min.js" type="text/javascript" defer></script>
			<script src="/assets/js/Alpine.min.js" type="text/javascript" defer></script>
			<script type="module">
                // Import element definition
                import ZeroMd from 'https://cdn.jsdelivr.net/npm/zero-md@3'
                // Register
                customElements.define('zero-md', class extends ZeroMd {                   
                    copySvgStr=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
                                    <path d="M7.5 3.375c0-1.036.84-1.875 1.875-1.875h.375a3.75 3.75 0 0 1 3.75 3.75v1.875C13.5 8.161 14.34 9 15.375 9h1.875A3.75 3.75 0 0 1 21 12.75v3.375C21 17.16 20.16 18 19.125 18h-9.75A1.875 1.875 0 0 1 7.5 16.125V3.375Z" />
                                    <path d="M15 5.25a5.23 5.23 0 0 0-1.279-3.434 9.768 9.768 0 0 1 6.963 6.963A5.23 5.23 0 0 0 17.25 7.5h-1.875A.375.375 0 0 1 15 7.125V5.25ZM4.875 6H6v10.125A3.375 3.375 0 0 0 9.375 19.5H16.5v1.125c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 0 1 3 20.625V7.875C3 6.839 3.84 6 4.875 6Z" />
                                </svg>`;
                    tickSvgStr=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
                                    <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 0 1 .208 1.04l-9 13.5a.75.75 0 0 1-1.154.114l-6-6a.75.75 0 0 1 1.06-1.06l5.353 5.353 8.493-12.74a.75.75 0 0 1 1.04-.207Z" clip-rule="evenodd" />
                                </svg>
                                `;
                     copyButtonStr=`<button style="width:2rem;height:2rem" aria-label="Copy code">
                            ${this.copySvgStr}
                        </button>`;
                     async load() { 
                        await super.load() 
                        this.template += `<style>.markdown-body {background-color:  var(--color-gray-900) !important; color:var(--color-gray-50) !important;} @media(prefers-color-scheme: dark){.markdown-body table{color:var(--color-gray-50) !important;}}  @media(prefers-color-scheme: light){.markdown-body th,.markdown-body td{background-color:var(--color-gray-900) !important;}} .zero-md-copy{position:relative;}.zero-md-copy button{position:absolute;top:0.5rem;right:0.75rem;cursor:pointer;opacity:0.9;}</style>` 
                    } 
                    async parse(obj) { 
                        const parsed = await super.parse(obj) 
                        if (!navigator.clipboard) return parsed 
                        const tpl = document.createElement('template') 
                        tpl.innerHTML = parsed 
                        tpl.content.querySelectorAll('pre>code').forEach((code) => { 
                        const pre = code.parentElement 
                        pre.replaceWith( 
                            this.frag(`<div class="zero-md-copy">${pre.outerHTML}${this.copyButtonStr}</div>`) 
                        ) 
                        }) 
                        return tpl.innerHTML 
                    } 
                    async render(obj) { 
                        const out = await super.render(obj) 
                        this.root.querySelectorAll('.zero-md-copy button').forEach((btn) => { 
                        btn.onclick = async () => { 
                            const code = btn.previousElementSibling.firstElementChild.innerText 
                            await navigator.clipboard.writeText(code) 
                            btn.innerHTML = this.tickSvgStr
                            btn.setAttribute('aria-label', 'Copied code')
                            setTimeout(() => {btn.innerHTML = this.copySvgStr;btn.setAttribute('aria-label', 'Copy code')}, 2500) 
                        } 
                        }) 
                        return out 
                    }               
                 })
            </script>
		</head>
		<body class="w-dvw h-dvh overflow-x-hidden relative font-(family-name:--font-geometric-humanist) bg-gray-900 text-gray-50" x-data="{}">
			@menuBarButton()
			{ children... }
			@bodyScript()
		</body>
	</html>
}
