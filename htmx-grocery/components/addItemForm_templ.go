// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func addItemForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<form method=\"POST\" hx-post=\"/add\" hx-target=\"next ul\" hx-swap=\"outerHTML transition:true\" hx-trigger=\"addEvent\" hx-include=\"[name=&#39;sort&#39;]\" x-on:submit=\"(ev)=&gt;\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\t\t\t\tif($store.data.newItem.trim()!=&#39;&#39;){\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t$store.data.newItemProcessing=true;\n\t\t\t\t\t$store.data.processing=true;\n\t\t\t\t\tev.currentTarget.dispatchEvent(new Event(&#39;addEvent&#39;));\n\t\t\t\t}\n\t\t\t}\" x-bind:disabled=\"$store.data.newItemProcessing || $store.data.processing\" class=\"flex-1 flex items-center py-2 px-4 rounded border-2 border-slate-300 transition duration-300 focus-within:border-slate-600 \"><input class=\"appearance-none outline-none flex-1 placeholder:text-slate-500\" placeholder=\"e.g. Costco Apples\" name=\"item\" x-model=\"$store.data.newItem\"> <button class=\"appearance-none outline-none cursor-pointer rounded transition duration-300  text-green-600 hover:opacity-90 disabled:opacity-80 disabled:cursor-not-allowed focus:ring-2 focus:ring-green-600\" type=\"submit\" x-bind:disabled=\"$store.data.newItemProcessing || $store.data.processing\"><template x-if=\"!$store.data.newItemProcessing\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = submitIcon("view-transition-name:addFormSubmitIcon").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</template><template x-if=\"$store.data.newItemProcessing\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = loader("border-green-700", "view-transition-name:addFormSubmitIcon").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</template></button></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
