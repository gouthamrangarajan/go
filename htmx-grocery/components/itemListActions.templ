package components

import "strconv"
import "fmt"

templ itemCompletedToggleCheckbox(item Item) {
	<form
		method="POST"
		hx-post="/complete"
		hx-trigger="toggleComplete"
		hx-target="next span"
		hx-swap="outerHTML transition:true"
		class="pt-1 pr-1"
	>
		<input type="hidden" name="id" value={ strconv.Itoa(item.Id) }/>
		if item.Completed {
			<input
				type="checkbox"
				name="completed"
				checked
				x-on:change="(ev)=>{
                    ev.currentTarget.dispatchEvent(new Event('toggleComplete',{ bubbles: true}))
                }"
				class="w-5 h-5 rounded-full transition duration-300 border border-slate-600 focus:ring-2 focus:ring-slate-600 focus:ring-offset-2 focus:ring-offset-slate-50 focus:outline-none"
			/>
		} else {
			<input
				type="checkbox"
				name="completed"
				x-on:change="(ev)=>{
                    ev.currentTarget.dispatchEvent(new Event('toggleComplete', {bubbles: true}))
                }"
				class="w-5 h-5 rounded-full transition duration-300 border border-slate-600 focus:ring-2 focus:ring-slate-600 focus:ring-offset-2 focus:ring-offset-slate-50 focus:outline-none"
			/>
		}
	</form>
}

templ increaseQuantityForm(id int, quantity int) {
	<form method="POST" hx-post="/increment" hx-target="previous span" hx-swap="outerHTML transition:true" class="pt-1.5">
		<input type="hidden" value={ strconv.Itoa(id) } name="id"/>
		<input
			type="hidden"
			value={ strconv.Itoa(quantity) }
			name="currentQuantity"
			id={ fmt.Sprintf("inpQuantity_increment_%v", id) }
		/>
		<button
			class="appearance-none outline-none cursor-pointer rounded transition duration-300 bg-green-600 text-white  hover:opacity-90 disabled:opacity-80 disabled:cursor-not-allowed focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50"
			type="submit"
		>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
				<path fill-rule="evenodd" d="M12 3.75a.75.75 0 0 1 .75.75v6.75h6.75a.75.75 0 0 1 0 1.5h-6.75v6.75a.75.75 0 0 1-1.5 0v-6.75H4.5a.75.75 0 0 1 0-1.5h6.75V4.5a.75.75 0 0 1 .75-.75Z" clip-rule="evenodd"></path>
			</svg>
		</button>
	</form>
}

templ decreaseQuantityForm(id int, quantity int) {
	<form method="POST" hx-post="/decrement" hx-target="next span" hx-swap="outerHTML transition:true" class="pt-1.5">
		<input type="hidden" value={ strconv.Itoa(id) } name="id"/>
		<input
			type="hidden"
			value={ strconv.Itoa(quantity) }
			name="currentQuantity"
			id={ fmt.Sprintf("inpQuantity_decrement_%v", id) }
		/>
		<button
			class="appearance-none outline-none cursor-pointer rounded transition duration-300 bg-red-600 text-white hover:opacity-90 disabled:opacity-80 disabled:cursor-not-allowed focus:ring-2 focus:ring-red-600 focus:ring-offset-2 focus:ring-offset-red-50"
			type="submit"
		>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
				<path fill-rule="evenodd" d="M4.25 12a.75.75 0 0 1 .75-.75h14a.75.75 0 0 1 0 1.5H5a.75.75 0 0 1-.75-.75Z" clip-rule="evenodd"></path>
			</svg>
		</button>
	</form>
}

templ deleteItemForm(id int) {
	<form
		method="POST"
		hx-post="/delete"
		hx-target="closest li"
		hx-swap="outerHTML transition:true"
		hx-trigger="deleteEvent"
		class="pt-1.5"
	>
		<input type="hidden" value={ strconv.Itoa(id) } name="id"/>
		<button
			class="appearance-none outline-none cursor-pointer rounded transition duration-300  text-red-600 hover:opacity-90  focus:ring-2 focus:ring-red-600"
			type="submit"
			x-on:click="(ev)=>{
				ev.preventDefault();								
				ev.currentTarget.dispatchEvent(new Event('deleteEvent',{bubbles:'true'}));
				ev.currentTarget.disabled=true;
			}"
			onclick={ templ.JSFuncCall("alpineStorePushDeletedId", id) }
		>
			<template x-if={ "!$store.data.deletedIds.includes(" + strconv.Itoa(id) + ")" }>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 24 24"
					fill="currentColor"
					class="size-6"
					style={ getDeleteButtonTransitionName(id) }
				>
					<path fill-rule="evenodd" d="M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z" clip-rule="evenodd"></path>
				</svg>
			</template>
			<template x-if={ "$store.data.deletedIds.includes(" + strconv.Itoa(id) + ")" }>
				@loader("border-red-600", getDeleteButtonTransitionName(id))
			</template>
		</button>
	</form>
}

func getDeleteButtonTransitionName(id int) string {
	return fmt.Sprintf("view-transition-name:deleteIcon-%v", id)
}
