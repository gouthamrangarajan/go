// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.856
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var onceHandle = templ.NewOnceHandle()

func Layout() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Go HTMX Grocery</title><meta name=\"description\" content=\"Simple grocery tracking app using golang, htmx &amp; tailwind css\"><link href=\"/assets/css/tailwind.css\" rel=\"stylesheet\"><link href=\"/assets/css/openprops.min.css\" rel=\"stylesheet\"><link href=\"/assets/favicon.ico\" rel=\"icon\" type=\"image/x-icon\"><script src=\"/assets/js/htmx.min.js\" type=\"text/javascript\"></script><script src=\"/assets/js/alpine.min.js\" type=\"text/javascript\" defer></script></head><body class=\"font-(family-name:--font-handwritten) text-xl\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<script type=\"text/javascript\">\t\t\t\t\n\t\t\t\t\tfunction setAlpineStoreNewItemValue(ev,val){\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tAlpine.store('data').newItem=val;\n\t\t\t\t\t}\n\t\t\t\t\tfunction alpineStorePushDeletedId(val){\n\t\t\t\t\t\tAlpine.store('data').deletedIds.push(val);\n\t\t\t\t\t}\n\t\t\t\t</script> <script type=\"text/javascript\">\n\t\t\t\t\tvar ABORT_CONTROLLER=new AbortController();\t\t\t\t\t\n\t\t\t\t\tdocument.addEventListener('alpine:init', () => {\t\t\t\t\t\t\n\t\t\t\t\t\tAlpine.store('data', {\n\t\t\t\t\t\t\tnewItemProcessing:false,\n\t\t\t\t\t\t\tprocessing: false,\n\t\t\t\t\t\t\tnewItem:'',\n\t\t\t\t\t\t\ttoken:'',\n\t\t\t\t\t\t\tsortProcessing:false,\n\t\t\t\t\t\t\tdeletedIds:[]\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\t\t\t\t\t\t\t\n\t\t\t\t\t}, { signal: ABORT_CONTROLLER.signal });\n\t\t\t\t\tdocument.body.addEventListener('htmx:afterSwap', function(event) {\t\n\t\t\t\t\t\tif(Alpine.store('data').processing){\n\t\t\t\t\t\t\tAlpine.store('data').processing=false\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(Alpine.store('data').newItemProcessing){\n\t\t\t\t\t\t\tAlpine.store('data').newItemProcessing=false\n\t\t\t\t\t\t\tlet newItemAddedSplitArray=Alpine.store('data').newItem.trim().split(' ');\n\t\t\t\t\t\t\tif(newItemAddedSplitArray.length>0){\n\t\t\t\t\t\t\t\tAlpine.store('data').newItem=newItemAddedSplitArray[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(Alpine.store('data').sortProcessing){\n\t\t\t\t\t\t\tAlpine.store('data').sortProcessing=false\n\t\t\t\t\t\t}\n\t\t\t\t\t}, { signal: ABORT_CONTROLLER.signal });\n\t\t\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = onceHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
