package components

import (
	"strconv"
	"time"
)

templ prevLink(currentMonthAndYear time.Time, autoFocus bool) {
	{{ url := "/?from=prev&month=" + strconv.Itoa(int(currentMonthAndYear.Month())-1) + "&year=" + strconv.Itoa(currentMonthAndYear.Year()) }}
	if int(currentMonthAndYear.Month())-1 < 1 {
		{{ url = "/?from=prev&month=12" + "&year=" + strconv.Itoa(currentMonthAndYear.Year()-1) }}
	}
	if autoFocus {
		<a
			class="appearance-none outline-none bg-orange-600 text-white py-1 px-3 rounded hover:opacity-80 focus:ring-2 focus:ring-orange-600 focus:ring-offset-2 focus:ring-offset-orange-50"
			href={ templ.SafeURL(url) }
			hx-get={ url }
			hx-boost="true"
			hx-swap="outerHTML transition:true"
			hx-target="body"
			hx-push-url="true"
			autofocus
			hx-trigger="prevMonthEvent"
			x-on:click="(ev)=>{
				ev.preventDefault()
				$store.data.processing=true;
				ev.currentTarget.dispatchEvent(new Event('prevMonthEvent'));
			}"
		>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5">
				<path fill-rule="evenodd" d="M7.72 12.53a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 1 1 1.06 1.06L9.31 12l6.97 6.97a.75.75 0 1 1-1.06 1.06l-7.5-7.5Z" clip-rule="evenodd"></path>
			</svg>
		</a>
	} else {
		<a
			class="appearance-none outline-none bg-orange-600 text-white py-1 px-3 rounded hover:opacity-80 focus:ring-2 focus:ring-orange-600 focus:ring-offset-2 focus:ring-offset-orange-50"
			href={ templ.SafeURL(url) }
			hx-get={ url }
			hx-boost="true"
			hx-swap="outerHTML transition:true"
			hx-target="body"
			hx-push-url="true"
			hx-trigger="prevMonthEvent"
			x-on:click="(ev)=>{
				ev.preventDefault()
				$store.data.processing=true;
				ev.currentTarget.dispatchEvent(new Event('prevMonthEvent'));
			}"
		>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5">
				<path fill-rule="evenodd" d="M7.72 12.53a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 1 1 1.06 1.06L9.31 12l6.97 6.97a.75.75 0 1 1-1.06 1.06l-7.5-7.5Z" clip-rule="evenodd"></path>
			</svg>
		</a>
	}
}

templ nextLink(currentMonthAndYear time.Time, autoFocus bool) {
	{{ url := "/?from=next&month=" + strconv.Itoa(int(currentMonthAndYear.Month())+1) + "&year=" + strconv.Itoa(currentMonthAndYear.Year()) }}
	if int(currentMonthAndYear.Month())+1 > 12 {
		{{ url = "/?from=next&month=1" + "&year=" + strconv.Itoa(currentMonthAndYear.Year()+1) }}
	}
	if autoFocus {
		<a
			class="appearance-none outline-none bg-orange-600 text-white py-1 px-3 rounded hover:opacity-80 focus:ring-2 focus:ring-orange-600 focus:ring-offset-2 focus:ring-offset-orange-50"
			href={ templ.SafeURL(url) }
			hx-get={ url }
			hx-boost="true"
			hx-swap="outerHTML transition:true"
			hx-target="body"
			hx-push-url="true"
			autofocus
			hx-trigger="nextMonthEvent"
			x-on:click="(ev)=>{
				ev.preventDefault()
				$store.data.processing=true;
				ev.currentTarget.dispatchEvent(new Event('nextMonthEvent'));
			}"
		>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5">
				<path fill-rule="evenodd" d="M16.28 11.47a.75.75 0 0 1 0 1.06l-7.5 7.5a.75.75 0 0 1-1.06-1.06L14.69 12 7.72 5.03a.75.75 0 0 1 1.06-1.06l7.5 7.5Z" clip-rule="evenodd"></path>
			</svg>
		</a>
	} else {
		<a
			class="appearance-none outline-none bg-orange-600 text-white py-1 px-3 rounded hover:opacity-80 focus:ring-2 focus:ring-orange-600 focus:ring-offset-2 focus:ring-offset-orange-50"
			href={ templ.SafeURL(url) }
			hx-get={ url }
			hx-boost="true"
			hx-swap="outerHTML transition:true"
			hx-target="body"
			hx-push-url="true"
			hx-trigger="nextMonthEvent"
			x-on:click="(ev)=>{
				ev.preventDefault()
				$store.data.processing=true;
				ev.currentTarget.dispatchEvent(new Event('nextMonthEvent'));
			}"
		>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5">
				<path fill-rule="evenodd" d="M16.28 11.47a.75.75 0 0 1 0 1.06l-7.5 7.5a.75.75 0 0 1-1.06-1.06L14.69 12 7.72 5.03a.75.75 0 0 1 1.06-1.06l7.5 7.5Z" clip-rule="evenodd"></path>
			</svg>
		</a>
	}
}
